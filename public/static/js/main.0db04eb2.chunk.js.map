{"version":3,"sources":["assets/img/pizza-logo.svg","assets/img/empty-cart.png","components/Button.jsx","components/Header.jsx","components/PizzaBlock/index.jsx","components/Categories.jsx","components/SortPopup.jsx","components/CartItem.jsx","components/PizzaBlock/LoadingBlock.jsx","redux/actions/pizzas.js","redux/reducers/cart.js","pages/Home.jsx","redux/actions/filters.js","redux/actions/cart.js","pages/Cart.jsx","App.js","serviceWorker.js","redux/reducers/pizzas.js","redux/reducers/filters.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["module","exports","Button","onClick","className","outline","children","classNames","Header","useSelector","cart","totalPrice","totalCount","to","width","src","logo","alt","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","PizzaBlock","imageUrl","name","types","id","sizes","price","onClickAddPizza","addedCount","React","useState","activeType","setActiveType","activeSize","setActiveSize","availableTypes","availableSizes","map","type","index","active","disabled","includes","onSelectType","key","size","onSelectSize","obj","defaultProps","Categories","memo","activeCategory","items","onClickCategory","SortPopup","onClickSortType","activeSortType","visiblePopup","setVisiblePopup","sortRef","useRef","activeLabel","find","useEffect","document","body","addEventListener","handleOutsideClick","e","current","contains","target","ref","onSelectItem","CartItem","onRemoveItem","plusItem","minusItem","window","confirm","LoadingBlock","speed","backgroundColor","foregroundColor","cx","cy","r","x","y","rx","ry","instance","axios","create","withCredentials","setPizzas","payload","initialState","getTotalPrice","arr","reduce","sum","getTotalSum","path","Object","values","split","firstKey","val","_get","state","action","currentPizzaItems","newItems","currentTotalPrice","currentTotalCount","length","newObjItems","oldItems","slice","categoryName","sortItems","order","Home","pizzas","cartItems","isLoaded","filters","sortBy","category","dispatch","useDispatch","get","then","data","fetchPizzas","onSelectCategory","useCallback","onSelectSort","handleAddPizzaToCart","Array","_","Cart","removeItemCart","onPlusItem","plusCartItem","onMinusItem","minusCartItem","addedPizza","keys","console","log","cartImageEmpty","href","App","exact","component","render","Boolean","location","hostname","match","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0db04eb2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pizza-logo.f3327011.svg\";","module.exports = __webpack_public_path__ + \"static/media/empty-cart.ceb2faf0.png\";","import React from \"react\";\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction Button({onClick,className,outline,children}) {\r\n    return <button\r\n        onClick={onClick}\r\n        className={classNames('button',className,{\r\n            'button--outline': outline\r\n        })}>\r\n        {children}\r\n        </button>\r\n\r\n}\r\n\r\nButton.propTypes = {\r\n    onClick: PropTypes.func\r\n}\r\n\r\nexport default Button;\r\n\r\n","import logo from \"../assets/img/pizza-logo.svg\";\r\nimport React from \"react\";\r\nimport Button from \"./Button\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nfunction Header() {\r\n\r\n    const {totalPrice,totalCount} = useSelector(({cart}) => cart)\r\n\r\nreturn <div className=\"header\">\r\n    <div className=\"container\">\r\n        <Link to={'/'}>\r\n        <div className=\"header__logo\">\r\n            <img width=\"38\" src={logo} alt=\"Pizza logo\"/>\r\n            <div>\r\n                <h1>React Pizza</h1>\r\n                <p>самая вкусная пицца во вселенной</p>\r\n            </div>\r\n        </div>\r\n        </Link>\r\n        <div className=\"header__cart\">\r\n            <Link to={'/cart'}>\r\n                <Button className=\"button--cart\">\r\n                    <span>{totalPrice} ₽</span>\r\n                    <div className=\"button__delimiter\"></div>\r\n                    <svg\r\n                        width=\"18\"\r\n                        height=\"18\"\r\n                        viewBox=\"0 0 18 18\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                        <path\r\n                            d=\"M6.33333 16.3333C7.06971 16.3333 7.66667 15.7364 7.66667 15C7.66667 14.2636 7.06971 13.6667 6.33333 13.6667C5.59695 13.6667 5 14.2636 5 15C5 15.7364 5.59695 16.3333 6.33333 16.3333Z\"\r\n                            stroke=\"white\"\r\n                            strokeWidth=\"1.8\"\r\n                            strokeLinecap=\"round\"\r\n                            strokeLinejoin=\"round\"\r\n                        />\r\n                        <path\r\n                            d=\"M14.3333 16.3333C15.0697 16.3333 15.6667 15.7364 15.6667 15C15.6667 14.2636 15.0697 13.6667 14.3333 13.6667C13.597 13.6667 13 14.2636 13 15C13 15.7364 13.597 16.3333 14.3333 16.3333Z\"\r\n                            stroke=\"white\"\r\n                            strokeWidth=\"1.8\"\r\n                            strokeLinecap=\"round\"\r\n                            strokeLinejoin=\"round\"\r\n                        />\r\n                        <path\r\n                            d=\"M4.78002 4.99999H16.3334L15.2134 10.5933C15.1524 10.9003 14.9854 11.176 14.7417 11.3722C14.4979 11.5684 14.1929 11.6727 13.88 11.6667H6.83335C6.50781 11.6694 6.1925 11.553 5.94689 11.3393C5.70128 11.1256 5.54233 10.8295 5.50002 10.5067L4.48669 2.82666C4.44466 2.50615 4.28764 2.21182 4.04482 1.99844C3.80201 1.78505 3.48994 1.66715 3.16669 1.66666H1.66669\"\r\n                            stroke=\"white\"\r\n                            strokeWidth=\"1.8\"\r\n                            strokeLinecap=\"round\"\r\n                            strokeLinejoin=\"round\"\r\n                        />\r\n                    </svg>\r\n                    <span>{totalCount}</span>\r\n\r\n                </Button>\r\n\r\n            </Link>\r\n        </div>\r\n    </div>\r\n</div>\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport classNames from 'classnames'\r\nimport PropTypes from 'prop-types'\r\nimport Button from \"../Button\";\r\n\r\nfunction PizzaBlock({imageUrl, name, types, id, sizes, price, onClickAddPizza,addedCount}) {\r\n    const [activeType, setActiveType] = React.useState(types[0]);\r\n    const [activeSize, setActiveSize] = React.useState(0);\r\n    const availableTypes = ['тонкое', 'традиционное']\r\n    const availableSizes = [26, 30, 40]\r\n\r\n    const onSelectType = (index) => {\r\n        setActiveType(index)\r\n    }\r\n\r\n    const onSelectSize = (index) => {\r\n        setActiveSize(index)\r\n    }\r\n\r\n    const onAddPizza = () => {\r\n        const obj = {\r\n            id,\r\n            name,\r\n            imageUrl,\r\n            price,\r\n            size: availableSizes[activeSize],\r\n            type: availableTypes[activeType]\r\n        }\r\n        onClickAddPizza(obj)\r\n    }\r\n    return (\r\n        <div className=\"pizza-block\">\r\n            <img\r\n                className=\"pizza-block__image\"\r\n                src={imageUrl}\r\n                alt=\"Pizza\"\r\n            />\r\n            <h4 className=\"pizza-block__title\">{name}</h4>\r\n            <div className=\"pizza-block__selector\">\r\n                <ul>\r\n                    {availableTypes.map((type, index) => (\r\n                        <li className={classNames({\r\n                            active: activeType === index,\r\n                            disabled: !types.includes(index)\r\n                        })} onClick={() => onSelectType(index)} key={type}>{type}</li>\r\n                    ))}\r\n                </ul>\r\n                <ul>\r\n                    {availableSizes.map((size, index) => (\r\n                        <li onClick={() => onSelectSize(index)} key={size} className={classNames({\r\n                            active: activeSize === index,\r\n                            disabled: !sizes.includes(size)\r\n                        })}>{size} см.</li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n            <div className=\"pizza-block__bottom\">\r\n                <div className=\"pizza-block__price\">от {price} ₽</div>\r\n                <Button className=\"button button--add\" outline onClick={onAddPizza}>\r\n                    <svg\r\n                        width=\"12\"\r\n                        height=\"12\"\r\n                        viewBox=\"0 0 12 12\"\r\n                        fill=\"none\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                        <path\r\n                            d=\"M10.8 4.8H7.2V1.2C7.2 0.5373 6.6627 0 6 0C5.3373 0 4.8 0.5373 4.8 1.2V4.8H1.2C0.5373 4.8 0 5.3373 0 6C0 6.6627 0.5373 7.2 1.2 7.2H4.8V10.8C4.8 11.4627 5.3373 12 6 12C6.6627 12 7.2 11.4627 7.2 10.8V7.2H10.8C11.4627 7.2 12 6.6627 12 6C12 5.3373 11.4627 4.8 10.8 4.8Z\"\r\n                            fill=\"white\"\r\n                        />\r\n                    </svg>\r\n                    <span>Добавить</span>\r\n                    {addedCount&&<i>{addedCount}</i>}\r\n                </Button>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nPizzaBlock.propTypes = {\r\n    name: PropTypes.string.isRequired, imageUrl: PropTypes.string.isRequired,\r\n    types: PropTypes.arrayOf(PropTypes.number),\r\n    sizes: PropTypes.arrayOf(PropTypes.number),\r\n    price: PropTypes.number.isRequired,\r\n    onClickAddPizza: PropTypes.func,\r\n    addedCount: PropTypes.number\r\n\r\n}\r\n\r\nPizzaBlock.defaultProps = {\r\n    types: [],\r\n    sizes: [],\r\n    name: '---',\r\n    price: 0\r\n}\r\n\r\n\r\nexport default PizzaBlock;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport PizzaBlock from \"./PizzaBlock\";\r\n\r\n\r\n\r\nconst Categories = React.memo(function Categories({activeCategory,items,onClickCategory}) {\r\n\r\n\r\n    return (\r\n        <div className=\"categories\">\r\n            <ul>\r\n                <li className={activeCategory === null ? 'active' : ''} onClick={() => onClickCategory(null)} >Все</li>\r\n                {items &&\r\n                items.map((name,index) => (\r\n                        <li className={activeCategory === index ? 'active' : ''} onClick={() => onClickCategory(index)} key={`${name}_${index}`}>{name}</li>\r\n                    )\r\n                )}\r\n            </ul>\r\n        </div>\r\n    );\r\n})\r\n\r\nCategories.propTypes = {\r\n   // activeCategory: PropTypes.oneOf(PropTypes.number.isRequired,null),\r\n    items: PropTypes.arrayOf(PropTypes.string).isRequired\r\n    //onClickCategory: PropTypes.func.isRequired\r\n}\r\n\r\nCategories.defaultProps = {\r\n    activeCategory:null,\r\n    items:[]\r\n}\r\n\r\nexport default Categories;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nconst SortPopup = React.memo(function SortPopup({items,onClickSortType,activeSortType}) {\r\n    const [visiblePopup,setVisiblePopup] = React.useState(false)\r\n    const sortRef = React.useRef()\r\n    const activeLabel = items.find(({type}) => type === activeSortType ).name\r\n\r\n\r\n    const toggleVisiblePopup = () => {\r\n        setVisiblePopup(!visiblePopup)\r\n    }\r\n\r\n    const onSelectItem = (obj) => {\r\n        setVisiblePopup(false)\r\n        if (onClickSortType){\r\n            onClickSortType(obj)\r\n        }\r\n    }\r\n\r\n\r\n    React.useEffect(() => {\r\n        document.body.addEventListener('click',handleOutsideClick)\r\n    },[])\r\n\r\n    const handleOutsideClick = (e) => {\r\n        /*if (!e.path.includes(sortRef.current)) {\r\n            setVisiblePopup(false)\r\n        }*/\r\n        if (sortRef.current && !sortRef.current.contains(e.target)) {\r\n            setVisiblePopup(false)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div ref={sortRef} className=\"sort\" >\r\n            <div className=\"sort__label\">\r\n                <svg className={visiblePopup ?'rotated': ''}\r\n                     width=\"10\"\r\n                     height=\"6\"\r\n                     viewBox=\"0 0 10 6\"\r\n                     fill=\"none\"\r\n                     xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                    <path\r\n                        d=\"M10 5C10 5.16927 9.93815 5.31576 9.81445 5.43945C9.69075 5.56315 9.54427 5.625 9.375 5.625H0.625C0.455729 5.625 0.309245 5.56315 0.185547 5.43945C0.061849 5.31576 0 5.16927 0 5C0 4.83073 0.061849 4.68424 0.185547 4.56055L4.56055 0.185547C4.68424 0.061849 4.83073 0 5 0C5.16927 0 5.31576 0.061849 5.43945 0.185547L9.81445 4.56055C9.93815 4.68424 10 4.83073 10 5Z\"\r\n                        fill=\"#2C2C2C\"\r\n                    />\r\n                </svg>\r\n                <b>Сортировка по:</b>\r\n                <span onClick={toggleVisiblePopup}>{activeLabel}</span>\r\n            </div>\r\n            {visiblePopup&&<div className=\"sort__popup\">\r\n                <ul>\r\n                    {items &&\r\n                    items.map((obj,index) => (\r\n                        <li onClick={() => onSelectItem(obj)} className={activeSortType === obj.type ? 'active':''}\r\n                            key={`${obj.type}_${index}`}>{obj.name}</li>\r\n                    ))}\r\n\r\n                </ul>\r\n            </div>}\r\n        </div>\r\n    );\r\n})\r\nSortPopup.propTypes = {\r\n    activeSortType: PropTypes.string.isRequired,\r\n    items: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    onClickSortType: PropTypes.func.isRequired\r\n}\r\n\r\nSortPopup.defaultProps = {\r\n    items:[]\r\n}\r\n\r\n\r\n\r\nexport default SortPopup;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Button} from \"./index\";\r\n\r\nconst CartItem = ({id,name,type,size,totalPrice,totalCount,onRemoveItem,plusItem,minusItem}) => {\r\n\r\n    const handleRemoveItem = () => {\r\n        if (window.confirm(\"Вы уверены что хотите удалить пиццу из корзины?\")){\r\n            onRemoveItem(id)\r\n        }\r\n    }\r\n\r\n    const handleMinusItem = () => {\r\n        minusItem(id)\r\n    }\r\n    const handlePlusItem = () => {\r\n        plusItem(id)\r\n    }\r\n\r\n    return (\r\n            <div className=\"cart__item\">\r\n                <div className=\"cart__item-img\">\r\n                    <img\r\n                        className=\"pizza-block__image\"\r\n                        src=\"https://dodopizza-a.akamaihd.net/static/Img/Products/Pizza/ru-RU/b750f576-4a83-48e6-a283-5a8efb68c35d.jpg\"\r\n                        alt=\"Pizza\"\r\n                    />\r\n                </div>\r\n                <div className=\"cart__item-info\">\r\n                    <h3>{name}</h3>\r\n                    <p>{type} тесто, {size} см.</p>\r\n                </div>\r\n                <div className=\"cart__item-count\">\r\n                    <div onClick={handleMinusItem} className=\"button button--outline button--circle cart__item-count-minus\">\r\n                        <svg width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" fill=\"none\"\r\n                             xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path\r\n                                d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\"\r\n                                fill=\"#EB5A1E\"/>\r\n                            <path\r\n                                d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\"\r\n                                fill=\"#EB5A1E\"/>\r\n                        </svg>\r\n\r\n                    </div>\r\n                    <b>{totalCount}</b>\r\n                    <div onClick={handlePlusItem} className=\"button button--outline button--circle cart__item-count-plus\">\r\n                        <svg width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" fill=\"none\"\r\n                             xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path\r\n                                d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\"\r\n                                fill=\"#EB5A1E\"/>\r\n                            <path\r\n                                d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\"\r\n                                fill=\"#EB5A1E\"/>\r\n                        </svg>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"cart__item-price\">\r\n                    <b>{totalPrice} ₽</b>\r\n                </div>\r\n                <div className=\"cart__item-remove\">\r\n                    <Button onClick={handleRemoveItem} className=\"button button--circle\" outline>\r\n                        <svg width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" fill=\"none\"\r\n                             xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path\r\n                                d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001 9.6C4.42985 9.6 4.00001 9.17016 4.00001 8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001 0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\"\r\n                                fill=\"#EB5A1E\"/>\r\n                            <path\r\n                                d=\"M5.75998 5.92001L3.83998 5.92001L0.959977 5.92001C0.429817 5.92001 -2.29533e-05 5.49017 -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817 4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998 4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998 5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\"\r\n                                fill=\"#EB5A1E\"/>\r\n                        </svg>\r\n\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n\r\n    );\r\n};\r\n\r\nCartItem.propTypes = {\r\n\r\n};\r\n\r\nexport default CartItem;","import React from 'react';\r\nimport ContentLoader from 'react-content-loader';\r\n\r\nfunction LoadingBlock() {\r\n    return (\r\n        <ContentLoader\r\n            className=\"pizza-block\"\r\n            speed={2}\r\n            width={280}\r\n            height={460}\r\n            viewBox=\"0 0 280 460\"\r\n            backgroundColor=\"#f3f3f3\"\r\n            foregroundColor=\"#ecebeb\">\r\n            <circle cx=\"132\" cy=\"142\" r=\"115\" />\r\n            <rect x=\"0\" y=\"273\" rx=\"6\" ry=\"6\" width=\"280\" height=\"26\" />\r\n            <rect x=\"0\" y=\"310\" rx=\"6\" ry=\"6\" width=\"280\" height=\"84\" />\r\n            <rect x=\"0\" y=\"418\" rx=\"6\" ry=\"6\" width=\"91\" height=\"31\" />\r\n            <rect x=\"137\" y=\"408\" rx=\"25\" ry=\"25\" width=\"140\" height=\"46\" />\r\n        </ContentLoader>\r\n    );\r\n}\r\n\r\nexport default LoadingBlock;","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials:true,\r\n    //baseURL: ``,\r\n})\r\n\r\nconst setLoaded = (value) => ({\r\n    type:'SET_LOADED',\r\n    payload:value\r\n})\r\n\r\nexport const fetchPizzas = (category,sortBy) => (dispatch) => {\r\n    dispatch(setLoaded(false))\r\n    instance.get(`/pizzas?${category !== null ? `category=${category}` : ''}&_sort=${sortBy.type}&_order=${\r\n        sortBy.order}`).then(\r\n        ({data}) => dispatch(setPizzas(data)))\r\n}\r\n\r\nexport const setPizzas = (items) => ({type:'SET_PIZZAS',payload:items})","export const ADD_PIZZA_CART = 'ADD_PIZZA_CART'\r\nexport const CLEAR_CART = 'CLEAR_CART'\r\nexport const REMOVE_ITEM_CART = 'REMOVE_ITEM_CART'\r\nexport const PLUS_CART_ITEM = 'PLUS_CART_ITEM'\r\nexport const MINUS_CART_ITEM = 'MINUS_CART_ITEM'\r\n\r\n\r\nconst initialState = {\r\n    items: {},\r\n    totalPrice: 0,\r\n    totalCount: 0\r\n}\r\n\r\nconst getTotalPrice = arr => arr.reduce((sum, obj) => obj.price + sum, 0)\r\n\r\nconst _get = (obj, path) => {\r\n    const [firstKey, ...keys] = path.split('.')\r\n    return keys.reduce((val, key) => {\r\n        return val[key]\r\n    }, obj[firstKey])\r\n}\r\n\r\nconst getTotalSum = (obj, path) => {\r\n    return Object.values(obj).reduce((sum, obj) => {\r\n        const value = _get(obj, path)\r\n        return sum + value\r\n    }, 0)\r\n}\r\n\r\nconst cart = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_PIZZA_CART:\r\n            const currentPizzaItems = !state.items[action.payload.id]\r\n                ? [action.payload]\r\n                : [...state.items[action.payload.id].items, action.payload]\r\n\r\n            const newItems = {\r\n                ...state.items,\r\n                [action.payload.id]: {items: currentPizzaItems, totalPrice: getTotalPrice(currentPizzaItems)}\r\n            }\r\n\r\n\r\n            const totalPrice = getTotalSum(newItems, 'totalPrice')\r\n            const totalCount = getTotalSum(newItems, 'items.length')\r\n\r\n            return {\r\n                ...state, items: newItems,\r\n                totalPrice,\r\n                totalCount: totalCount\r\n\r\n            }\r\n\r\n        case CLEAR_CART:\r\n            return {\r\n                items: {},\r\n                totalPrice: 0,\r\n                totalCount: 0\r\n            }\r\n\r\n        case REMOVE_ITEM_CART: {\r\n\r\n            const newItems = {\r\n                ...state.items\r\n            }\r\n            const currentTotalPrice = newItems[action.payload].totalPrice\r\n            const currentTotalCount = newItems[action.payload].items.length\r\n\r\n            delete newItems[action.payload]\r\n            return {\r\n                ...state, items: newItems,\r\n                totalPrice: state.totalPrice - currentTotalPrice,\r\n                totalCount: state.totalCount - currentTotalCount\r\n            }\r\n        }\r\n\r\n        case PLUS_CART_ITEM : {\r\n\r\n            const newObjItems = [\r\n                ...state.items[action.payload].items,\r\n                state.items[action.payload].items[0]\r\n            ]\r\n\r\n            const newItems = {\r\n                ...state.items,\r\n                [action.payload]: {\r\n                    items:newObjItems,\r\n                    totalPrice:getTotalPrice(newObjItems)\r\n                }\r\n            }\r\n\r\n            const totalCount = getTotalSum(newItems, 'items.length');\r\n            const totalPrice = getTotalSum(newItems, 'totalPrice');\r\n\r\n            return {\r\n                ...state,\r\n                items:newItems,\r\n                totalCount,\r\n                totalPrice\r\n            }\r\n        }\r\n         case MINUS_CART_ITEM : {\r\n             const oldItems = state.items[action.payload].items\r\n             const newObjItems = oldItems.length>1 ? state.items[action.payload].items.slice(1) : oldItems\r\n\r\n             const newItems = {\r\n                 ...state.items,\r\n                 [action.payload]: {\r\n                     items:newObjItems,\r\n                     totalPrice:getTotalPrice(newObjItems)\r\n                 }\r\n             }\r\n\r\n             const totalCount = getTotalSum(newItems, 'items.length');\r\n             const totalPrice = getTotalSum(newItems, 'totalPrice');\r\n\r\n             return {\r\n                 ...state,\r\n                 items:newItems,\r\n                 totalCount,\r\n                 totalPrice\r\n             }\r\n        }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default cart","import React from 'react';\r\nimport {Categories, SortPopup,PizzaBlock,LoadingBlock} from \"../components\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { setCategory, setSortBy} from \"../redux/actions/filters\";\r\nimport {fetchPizzas} from \"../redux/actions/pizzas\";\r\nimport {addPizzaToCart} from \"../redux/actions/cart\";\r\n\r\nconst categoryName = [\"Мясные\", \"Вегетарианская\", \"Гриль\", \"Острые\", \"Закрытые\"]\r\nconst sortItems = [{name:'популярности', type:'rating', order: 'desc'}, {name:'цене', type:'price', order: 'desc'},\r\n    {name:'алфавиту', type:'name', order: 'asc'}]\r\n\r\nfunction Home() {\r\n\r\n    const items = useSelector(({pizzas}) => pizzas.items)\r\n    const cartItems = useSelector(({cart}) => cart.items)\r\n    const isLoaded = useSelector(({pizzas}) => pizzas.isLoaded)\r\n    const {sortBy,category} = useSelector(({filters}) => filters)\r\n    const dispatch = useDispatch()\r\n\r\n    React.useEffect(() => {\r\n        dispatch(fetchPizzas(category,sortBy))\r\n    },[category,sortBy])\r\n\r\n    const onSelectCategory = React.useCallback((index) => {\r\n        dispatch(setCategory(index))\r\n    },[])\r\n\r\n    const onSelectSort = React.useCallback((obj) => {\r\n        dispatch(setSortBy(obj))\r\n    },[sortBy])\r\n\r\n    const handleAddPizzaToCart = (obj) => {\r\n        dispatch(addPizzaToCart(obj))\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"content__top\">\r\n                <Categories onClickCategory={onSelectCategory}\r\n                            items={categoryName}\r\n                            activeCategory = {category}/>\r\n                <SortPopup items={sortItems} activeSortType={sortBy.type} onClickSortType={onSelectSort}/>\r\n            </div>\r\n            <h2 className=\"content__title\">Все пиццы</h2>\r\n            <div className=\"content__items\">\r\n                {isLoaded\r\n                ? items&&\r\n                    items.map(obj => (\r\n                        <PizzaBlock key={obj.id} {...obj}\r\n                                    onClickAddPizza={handleAddPizzaToCart}\r\n                        addedCount={cartItems[obj.id]&& cartItems[obj.id].items.length}\r\n                        />\r\n                    ))\r\n                    : Array(12).fill(0).map((_, index) => <LoadingBlock key={index}/>)\r\n                }\r\n\r\n\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Home;","\r\nexport const setSortBy = ({type,order}) => ({type:'SET_SORT_BY',payload:{type,order}})\r\nexport const setCategory = (catIndex) => ({type:'SET_CATEGORY',payload:catIndex})\r\n\r\n","import {ADD_PIZZA_CART, CLEAR_CART, MINUS_CART_ITEM, PLUS_CART_ITEM, REMOVE_ITEM_CART} from \"../reducers/cart\";\r\n\r\n\r\nexport const addPizzaToCart = (pizzaObj) => ({type:ADD_PIZZA_CART,payload:pizzaObj})\r\nexport const clearCart = () => ({type:CLEAR_CART})\r\nexport const removeItemCart = (id) => ({type:REMOVE_ITEM_CART,payload:id})\r\nexport const plusCartItem = (id) => ({type:PLUS_CART_ITEM,payload:id})\r\nexport const minusCartItem = (id) => ({type:MINUS_CART_ITEM,payload:id})","import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport {CartItem,Button} from \"../components\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {clearCart,removeItemCart,plusCartItem,minusCartItem} from \"../redux/actions/cart\"\r\nimport cartImageEmpty from \"../assets/img/empty-cart.png\"\r\n\r\nfunction Cart() {\r\n\r\n    const dispatch = useDispatch()\r\n    const {items,totalPrice,totalCount} = useSelector(({cart}) => cart)\r\n\r\n    const onClearCart = () => {\r\n        dispatch(clearCart())\r\n    }\r\n     const onRemoveItem = (id) => {\r\n        dispatch(removeItemCart(id))\r\n     }\r\n     const onPlusItem = (id) => {\r\n        dispatch(plusCartItem(id))\r\n     }\r\n     const onMinusItem = (id) => {\r\n        dispatch(minusCartItem(id))\r\n     }\r\n\r\n     const onClickOrder = () => {\r\n         console.log(\"Ваш заказ оплачен\",items)\r\n     }\r\n\r\n    const addedPizza = Object.keys(items).map((key) => items[key].items[0])\r\n\r\n    return (\r\n        <div className=\"content\">\r\n            <div className=\"container container--cart\">\r\n                {totalCount ?\r\n                    <div className=\"cart\">\r\n                    <div className=\"cart__top\">\r\n                        <h2 className=\"content__title\">\r\n                            <svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\"\r\n                                 xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path\r\n                                    d=\"M6.33333 16.3333C7.06971 16.3333 7.66667 15.7364 7.66667 15C7.66667 14.2636 7.06971 13.6667 6.33333 13.6667C5.59695 13.6667 5 14.2636 5 15C5 15.7364 5.59695 16.3333 6.33333 16.3333Z\"\r\n                                    stroke=\"white\" strokeWidth=\"1.8\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                                <path\r\n                                    d=\"M14.3333 16.3333C15.0697 16.3333 15.6667 15.7364 15.6667 15C15.6667 14.2636 15.0697 13.6667 14.3333 13.6667C13.597 13.6667 13 14.2636 13 15C13 15.7364 13.597 16.3333 14.3333 16.3333Z\"\r\n                                    stroke=\"white\" strokeWidth=\"1.8\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                                <path\r\n                                    d=\"M4.78002 4.99999H16.3334L15.2134 10.5933C15.1524 10.9003 14.9854 11.176 14.7417 11.3722C14.4979 11.5684 14.1929 11.6727 13.88 11.6667H6.83335C6.50781 11.6694 6.1925 11.553 5.94689 11.3393C5.70128 11.1256 5.54233 10.8295 5.50002 10.5067L4.48669 2.82666C4.44466 2.50615 4.28764 2.21182 4.04482 1.99844C3.80201 1.78505 3.48994 1.66715 3.16669 1.66666H1.66669\"\r\n                                    stroke=\"white\" strokeWidth=\"1.8\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                            </svg>\r\n                            Корзина\r\n                        </h2>\r\n                        <div className=\"cart__clear\">\r\n                            <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\"\r\n                                 xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path d=\"M2.5 5H4.16667H17.5\" stroke=\"#B6B6B6\" strokeWidth=\"1.2\" strokeLinecap=\"round\"\r\n                                      strokeLinejoin=\"round\"/>\r\n                                <path\r\n                                    d=\"M6.66663 5.00001V3.33334C6.66663 2.89131 6.84222 2.46739 7.15478 2.15483C7.46734 1.84227 7.89127 1.66667 8.33329 1.66667H11.6666C12.1087 1.66667 12.5326 1.84227 12.8451 2.15483C13.1577 2.46739 13.3333 2.89131 13.3333 3.33334V5.00001M15.8333 5.00001V16.6667C15.8333 17.1087 15.6577 17.5326 15.3451 17.8452C15.0326 18.1577 14.6087 18.3333 14.1666 18.3333H5.83329C5.39127 18.3333 4.96734 18.1577 4.65478 17.8452C4.34222 17.5326 4.16663 17.1087 4.16663 16.6667V5.00001H15.8333Z\"\r\n                                    stroke=\"#B6B6B6\" strokeWidth=\"1.2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                                <path d=\"M8.33337 9.16667V14.1667\" stroke=\"#B6B6B6\" strokeWidth=\"1.2\"\r\n                                      strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                                <path d=\"M11.6666 9.16667V14.1667\" stroke=\"#B6B6B6\" strokeWidth=\"1.2\"\r\n                                      strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                            </svg>\r\n\r\n                            <span onClick={onClearCart}>Очистить корзину</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"content__items\">\r\n                        {addedPizza.map(obj => <CartItem key={obj.name} name={obj.name}\r\n                                                           type={obj.type} size={obj.size}\r\n                                                           totalPrice={items[obj.id].totalPrice}\r\n                                                         totalCount={items[obj.id].items.length}\r\n                                                         onRemoveItem={onRemoveItem}\r\n                                                         plusItem={onPlusItem}\r\n                                                         minusItem={onMinusItem}\r\n                                                         id={obj.id}/>)}\r\n                    </div>\r\n                    <div className=\"cart__bottom\">\r\n                        <div className=\"cart__bottom-details\">\r\n                            <span> Всего пицц: <b>{totalCount} шт.</b> </span>\r\n                            <span> Сумма заказа: <b>{totalPrice} ₽</b> </span>\r\n                        </div>\r\n                        <div className=\"cart__bottom-buttons\">\r\n                            <Link to=\"/\" className=\"button button--outline button--add go-back-btn\">\r\n                                <svg width=\"8\" height=\"14\" viewBox=\"0 0 8 14\" fill=\"none\"\r\n                                     xmlns=\"http://www.w3.org/2000/svg\">\r\n                                    <path d=\"M7 13L1 6.93015L6.86175 1\" stroke=\"#D3D3D3\" strokeWidth=\"1.5\"\r\n                                          strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n                                </svg>\r\n\r\n                                <span>Вернуться назад</span>\r\n                            </Link>\r\n                            <Button onClick={onClickOrder} className=\"button pay-btn\">\r\n                                <span>Оплатить сейчас</span>\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                : <div className=\"cart cart--empty\">\r\n                        <h2>Корзина пустая <i>😕</i></h2>\r\n                        <p>\r\n                            Вероятней всего, вы не заказывали ещё пиццу.<br/>\r\n                            Для того, чтобы заказать пиццу, перейди на главную страницу.\r\n                        </p>\r\n                        <img src={cartImageEmpty} alt=\"Empty cart\"/>\r\n                        <a href=\"/\" className=\"button button--black\">\r\n                            <span>Вернуться назад</span>\r\n                        </a>\r\n                    </div>\r\n\r\n                }\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Cart;","import React from 'react';\nimport './scss/app.scss';\nimport {Header} from \"./components\"\nimport {Home,Cart} from \"./pages\";\nimport {Route} from \"react-router-dom\";\n\nimport {useDispatch} from \"react-redux\";\n\n\nfunction App() {\n    const dispatch = useDispatch()\n\n\n    return (\n        <div className=\"wrapper\">\n          <Header/>\n            <div className=\"content\">\n              <Route exact path={'/'} component={Home}/>\n              <Route exact path={'/cart'} render={() => <Cart/>}/>\n                </div>\n        </div>\n    );\n}\n\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const SET_PIZZAS = 'SET_PIZZAS'\r\nconst SET_LOADED = 'SET_LOADED'\r\n\r\n\r\nconst initialState = {\r\n    items: [],\r\n    isLoaded:false\r\n}\r\n\r\n\r\nconst pizzas = (state = initialState,action) => {\r\n    switch (action.type) {\r\n        case SET_PIZZAS:\r\n            return {\r\n                ...state,items: action.payload, isLoaded: true\r\n            }\r\n\r\n        case SET_LOADED:\r\n            return {\r\n                ...state, isLoaded:action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default pizzas","const SET_SORT_BY = 'SET_SORT_BY'\r\nconst SET_CATEGORY = 'SET_CATEGORY'\r\n\r\n\r\nconst initialState = {\r\n    sortBy: {\r\n        type:'rating',\r\n        order: 'desc'\r\n    },\r\n    category: null\r\n}\r\n\r\n\r\nconst filters = (state = initialState,action) => {\r\nswitch (action.type) {\r\n    case SET_SORT_BY:\r\n        return {\r\n            ...state,sortBy: action.payload\r\n        }\r\n        case SET_CATEGORY:\r\n        return {\r\n            ...state,category: action.payload\r\n        }\r\n\r\n    default:\r\n        return state\r\n}\r\n}\r\n\r\nexport default filters","import pizzas from './pizzas'\r\nimport filters from './filters'\r\nimport {combineReducers} from \"redux\"\r\nimport cart from \"./cart\";\r\n\r\nconst rootReducer = combineReducers({\r\n    pizzas,\r\n    filters,\r\n    cart\r\n})\r\n\r\nexport default rootReducer","import {createStore,compose, applyMiddleware} from \"redux\"\r\nimport rootReducer from './reducers'\r\nimport thunk from 'redux-thunk'\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\r\n\r\nwindow.store = store\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router, HashRouter} from \"react-router-dom\";\nimport store from \"./redux/store\"\nimport {Provider} from \"react-redux\";\n\n\n\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <Router>\n          <Provider store={store}>\n         <App />\n          </Provider>\n      </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}